{"version":3,"sources":["components/imageGallery/imageGalleryItem/ImageGalleryItem.js","components/imageGallery/ImageGallery.js","components/loader/Loader.js","components/notification/Notification.js","components/searchbar/Searchbar.js","api/galleryApi.js","components/button/ButtonStyled.js","components/button/Button.js","components/AppStyled.js","components/modal/ModalStyled.js","components/modal/Modal.js","components/App.js","index.js"],"names":["ImageGalleryItem","webformatURL","largeImageURL","tags","onImageClick","className","onClick","src","alt","data-source","ImageGallery","images","map","image","id","LoaderSpinner","type","color","height","width","timeout","Notification","message","Searchbar","state","inputValue","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","onSubmit","this","autoComplete","autoFocus","placeholder","onChange","Component","BASE_URL","API_KEY","imagesApi","fetchImagesWithQuery","searchQuery","page","axios","get","then","response","data","hits","ButtonStyled","styled","button","Button","AppStyled","div","ModalContainer","Modal","handleKeyDown","code","closeModal","handleOverlayClick","currentTarget","window","addEventListener","removeEventListener","largeImage","App","isLoading","error","hideBtn","fetchImages","length","prevState","catch","finally","handleSearchbarSubmit","query","setModalImage","dataset","source","prevProps","scrollTo","top","document","documentElement","scrollHeight","behavior","Loader","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.e3b74060.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ImageGalleryItem = ({\r\n  webformatURL,\r\n  largeImageURL,\r\n  tags,\r\n  onImageClick,\r\n}) => {\r\n  return (\r\n    <li className=\"ImageGalleryItem\" onClick={onImageClick}>\r\n      <img\r\n        src={webformatURL}\r\n        alt={tags}\r\n        className=\"ImageGalleryItem-image\"\r\n        data-source={largeImageURL}\r\n      />\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n\r\nImageGalleryItem.propTypes = {\r\n  webformatURL: PropTypes.string.isRequired,\r\n  largeImageURL: PropTypes.string.isRequired,\r\n  tags: PropTypes.string.isRequired,\r\n  onImageClick: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport ImageGalleryItem from \"./imageGalleryItem/ImageGalleryItem\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ImageGallery = ({ images, onImageClick }) => {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {images.map((image) => (\r\n        <ImageGalleryItem\r\n          key={image.id}\r\n          {...image}\r\n          onImageClick={onImageClick}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  onImageClick: PropTypes.func.isRequired,\r\n};\r\nexport default ImageGallery;\r\n","import Loader from 'react-loader-spinner';\r\n\r\nconst LoaderSpinner = () => {\r\n  return (\r\n    <div className=\"Loader\">\r\n      <Loader\r\n        type=\"Circles\"\r\n        color=\"#00BFFF\"\r\n        height={80}\r\n        width={80}\r\n        timeout={3000}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoaderSpinner;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Notification = ({ message }) => {\r\n  return (\r\n    <p className=\"ErrorNotification\">Whoops, something went wrong: {message}</p>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class Searchbar extends Component {\r\n  static propTypes = { onSubmit: PropTypes.func.isRequired };\r\n\r\n  state = {\r\n    inputValue: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ inputValue: e.target.value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state.inputValue);\r\n    this.setState({ inputValue: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            value={this.state.inputValue}\r\n            onChange={this.handleChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","import axios from \"axios\";\r\n\r\nconst BASE_URL = \"https://pixabay.com/api/\";\r\nconst API_KEY = \"19534260-87f0ecad02a26142ab72e3ef2\";\r\n\r\nconst fetchImagesWithQuery = (searchQuery, page = 1) => {\r\n  return axios\r\n    .get(\r\n      `${BASE_URL}?q=${searchQuery}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`\r\n    )\r\n    .then((response) => response.data.hits);\r\n};\r\n\r\nconst imagesApi = {\r\n  fetchImagesWithQuery,\r\n};\r\nexport default imagesApi;\r\n","import styled from \"styled-components\";\r\n\r\nconst ButtonStyled = styled.button`\r\n  padding: 8px 16px;\r\n  border-radius: 2px;\r\n  background-color: #3f51b5;\r\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  text-align: center;\r\n  display: inline-block;\r\n  color: #fff;\r\n  border: 0;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  font-family: inherit;\r\n  font-size: 18px;\r\n  line-height: 24px;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  width: 180px;\r\n  margin: 0 auto;\r\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\r\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\r\n  &:hover,\r\n  &:focus {\r\n    background-color: #303f9f;\r\n  }\r\n`;\r\nexport default ButtonStyled;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ButtonStyled from \"./ButtonStyled\";\r\n\r\nconst Button = ({ onClick }) => {\r\n  return (\r\n    <ButtonStyled type=\"button\" onClick={onClick}>\r\n      Load more\r\n    </ButtonStyled>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n","import styled from 'styled-components';\n\nexport const AppStyled = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 16px;\n  padding-bottom: 24px;\n\n  .Searchbar {\n    top: 0;\n    left: 0;\n    position: sticky;\n    z-index: 1100;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    min-height: 64px;\n    padding-right: 24px;\n    padding-left: 24px;\n    padding-top: 12px;\n    padding-bottom: 12px;\n    color: #fff;\n    background-color: #3f51b5;\n    box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n      0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n  }\n  /*\n * Стили компонента SearchForm\n */\n  .SearchForm {\n    display: flex;\n    align-items: center;\n    width: 100%;\n    max-width: 600px;\n    background-color: #fff;\n    border-radius: 3px;\n    overflow: hidden;\n  }\n  .SearchForm-button {\n    display: inline-block;\n    width: 48px;\n    height: 48px;\n    border: 0;\n    background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\n    background-size: 40%;\n    background-repeat: no-repeat;\n    background-position: center;\n    opacity: 0.6;\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    cursor: pointer;\n    outline: none;\n  }\n  .SearchForm-button:hover {\n    opacity: 1;\n  }\n  .SearchForm-button-label {\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    padding: 0;\n    overflow: hidden;\n    clip: rect(0, 0, 0, 0);\n    white-space: nowrap;\n    clip-path: inset(50%);\n    border: 0;\n  }\n  .SearchForm-input {\n    display: inline-block;\n    width: 100%;\n    font: inherit;\n    font-size: 20px;\n    border: none;\n    outline: none;\n    padding-left: 4px;\n    padding-right: 4px;\n  }\n  .SearchForm-input::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n  /*\n * Стили компонента ImageGallery\n */\n  .ImageGallery {\n    display: grid;\n    max-width: calc(100vw - 48px);\n    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n    grid-gap: 16px;\n    margin-top: 0;\n    margin-bottom: 0;\n    padding: 0;\n    list-style: none;\n    margin-left: auto;\n    margin-right: auto;\n  }\n  /*\n * Стили компонента ImageGalleryItem\n */\n  .ImageGalleryItem {\n    border-radius: 2px;\n    box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n      0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  }\n  .ImageGalleryItem-image {\n    width: 100%;\n    height: 260px;\n    object-fit: cover;\n    transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n  .ImageGalleryItem-image:hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n  /*\n * Стили компонента Notification\n */\n  .ErrorNotification {\n    font-size: 20px;\n    text-align: center;\n  }\n  /*\n * Стили загрузчика Loader\n */\n  .Loader {\n    display: block;\n    width: 60px;\n    margin: 20px auto;\n  }\n`;\n","import styled from \"styled-components\";\r\n\r\nconst ModalContainer = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n  z-index: 1200;\r\n  .Modal {\r\n    max-width: calc(100vw - 48px);\r\n    max-height: calc(100vh - 24px);\r\n  }\r\n`;\r\n\r\nexport default ModalContainer;\r\n","import React, { Component } from \"react\";\r\nimport ModalContainer from \"./ModalStyled\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class Modal extends Component {\r\n  static propTypes = {\r\n    closeModal: PropTypes.func.isRequired,\r\n    largeImage: PropTypes.string.isRequired,\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = (e) => {\r\n    e.code === \"Escape\" && this.props.closeModal();\r\n  };\r\n\r\n  handleOverlayClick = (e) => {\r\n    e.target === e.currentTarget && this.props.closeModal();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <ModalContainer className=\"Overlay\" onClick={this.handleOverlayClick}>\r\n        <div className=\"Modal\">\r\n          <img src={this.props.largeImage} alt=\"\" />\r\n        </div>\r\n      </ModalContainer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\n\nimport ImageGallery from './imageGallery/ImageGallery';\nimport LoaderSpinner from './loader/Loader';\nimport Notification from './notification/Notification';\nimport Searchbar from './searchbar/Searchbar';\nimport imagesApi from '../api/galleryApi';\nimport Button from './button/Button';\nimport { AppStyled } from './AppStyled';\nimport Modal from './modal/Modal';\n\nexport default class App extends Component {\n  state = {\n    images: [],\n    isLoading: false,\n    error: null,\n    searchQuery: '',\n    page: 1,\n    largeImageURL: null,\n    hideBtn: false,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevQuery = prevState.searchQuery;\n    const nextQuery = this.state.searchQuery;\n    prevQuery !== nextQuery && this.fetchImages();\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  }\n\n  fetchImages = () => {\n    const { searchQuery, page } = this.state;\n\n    this.setState({ isLoading: true });\n    imagesApi\n      .fetchImagesWithQuery(searchQuery, page)\n      .then(images => {\n        images.length\n          ? this.setState(prevState => ({\n              images: [...prevState.images, ...images],\n              page: prevState.page + 1,\n            }))\n          : this.setState({ hideBtn: true });\n      })\n      .catch(error => this.setState({ error }))\n      .finally(() => {\n        this.setState({ isLoading: false });\n      });\n  };\n\n  handleSearchbarSubmit = query => {\n    this.setState({ searchQuery: query, page: 1, images: [] });\n  };\n\n  setModalImage = e => {\n    this.setState({ largeImageURL: e.target.dataset.source });\n  };\n\n  closeModal = () => {\n    this.setState({ largeImageURL: null });\n  };\n\n  render() {\n    const { images, isLoading, largeImageURL, error, hideBtn } = this.state;\n    return (\n      <AppStyled>\n        <Searchbar onSubmit={this.handleSearchbarSubmit} />\n        {images.length > 0 && (\n          <ImageGallery images={images} onImageClick={this.setModalImage} />\n        )}\n        {images.length > 0 && !isLoading && !hideBtn && (\n          <Button onClick={this.fetchImages} />\n        )}\n        {isLoading && <LoaderSpinner />}\n        {error && <Notification message={error.message} />}\n        {largeImageURL && (\n          <Modal largeImage={largeImageURL} closeModal={this.closeModal} />\n        )}\n      </AppStyled>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}